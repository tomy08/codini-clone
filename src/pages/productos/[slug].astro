---
import Layout from '../../layouts/Layout.astro'
import Breadcrumb from '../../components/shared/Breadcrumb.astro'
import InputQuantity from '../../components/shared/InputQuantity.astro'
import { getProducts, getProductBySlug } from '../../utils/products'

export async function getStaticPaths() {
  const products = await getProducts()
  const slugs = products.items.map((product) => product.fields.url)

  return slugs.map((slug) => ({
    params: { slug },
  }))
}

const { slug } = Astro.params

const products = await getProductBySlug(slug as string)
const product = products.items[0].fields
const description = product.description.split(/\n\s*\n/)
---

<Layout title={product.name ? product.name : product.nombre}>
  <Breadcrumb />
  <main class="mb-8">
    <div class="container mx-auto px-4">
      <div
        class="lg:col-gap-12 xl:col-gap-16 mt-8 grid grid-cols-1 gap-12 lg:mt-12 lg:grid-cols-5 lg:gap-16"
      >
        <div class="lg:col-span-3 lg:row-end-1">
          <div class="lg:flex lg:items-start">
            <div class="lg:order-2 lg:ml-5">
              <div class="max-w-xl overflow-hidden rounded-lg">
                <img
                  class="h-full w-full max-w-96 object-cover"
                  src={product.img.fields.file.url}
                  alt=""
                />
              </div>
            </div>
          </div>
        </div>

        <div class="lg:col-span-2 lg:row-span-2 lg:row-end-2">
          <h1 class="text-2xl font-bold text-gray-secondary sm:text-3xl mb-4">
            {product.name ? product.name : product.nombre}
          </h1>

          <div class="flex items-end mb-2">
            <p>
              <span
                class=`text-3xl font-bold text-gray-secondary font-bold ${product.discount && 'hidden'}`
                >{product.price * (product.discount / 100)}</span
              >
              <span
                class="text-2xl text-gray-secondary font-bold ${!product.discount && 'line-through'}"
                >${product.price.toLocaleString('es-ES')}</span
              >
            </p>
          </div>

          <span
            class="whitespace-nowrap rounded-full bg-purple-100 px-2.5 py-0.5 text-sm text-purple-700"
          >
            {product.category}
          </span>

          <div
            class="mt-2 flex flex-col items-center justify-between space-y-4 border-t border-b py-4 sm:flex-row sm:space-y-0"
          >
            <InputQuantity />

            <button
              type="button"
              id="add-to-cart"
              class="inline-flex items-center justify-center rounded-md border-2 border-transparent bg-orange-section bg-none px-8 py-2.5 text-center text-base font-bold text-white transition-all duration-200 ease-in-out focus:shadow hover:bg-blue-section gap-2"
            >
              <img src="/svgs/cart-white.svg" />
              Add to cart
            </button>
          </div>
        </div>

        <div class="lg:col-span-3">
          <div class="border-b border-gray-300">
            <a
              href="#"
              title=""
              class="py-4 text-sm font-bold text-gray-secondary"
            >
              Descripci√≥n
            </a>
          </div>

          <div class="flow-root mt-4">
            {
              description.map((desc: string) => (
                <p class="text-gray-secondary text-sm">{desc}</p>
              ))
            }
          </div>
        </div>
      </div>
    </div>
  </main>

  <script define:vars={{ product }}>
    const btn = document.getElementById('add-to-cart')
    const decreaseBtn = document.getElementById('decrease-quantity')
    const increaseBtn = document.getElementById('increase-quantity')
    const quantityInput = document.getElementById('quantity')

    decreaseBtn?.addEventListener('click', () => {
      if (quantityInput.value > 1) {
        quantityInput.value = Number(quantityInput.value) - 1
      }
    })

    increaseBtn?.addEventListener('click', () => {
      if (quantityInput.value < 20) {
        quantityInput.value = Number(quantityInput.value) + 1
      }
    })

    btn?.addEventListener('click', () => {
      const countProducts = document.getElementById('count-products')

      const quantity = quantityInput.value
      let cart = JSON.parse(localStorage.getItem('cart')) || []

      const existingProductIndex = cart.findIndex(
        (item) => item.product.id === product.id
      )

      if (existingProductIndex > -1) {
        cart[existingProductIndex].quantity += Number(quantity)
      } else {
        cart.push({ product, quantity: Number(quantity) })
      }

      localStorage.setItem('cart', JSON.stringify(cart))

      const totalProducts = cart.reduce(
        (acc, product) => acc + product.quantity,
        0
      )

      if (totalProducts > 0) {
        countProducts.textContent = totalProducts
        countProducts.classList.remove('hidden')
      } else {
        countProducts.classList.add('hidden')
      }
    })
  </script>
</Layout>
